{"ast":null,"code":"import { endpoints } from './endPoint';\nconst fetchHeader = {\n  \"Content-Type\": \"application/json\"\n}; //\"appId\":data\n\nconst fetchHeaderFile = {\n  \"Content-Type\": \"application/json\",\n  \"mimeType\": \"multipart/form-data\"\n};\nexport default class Api {\n  constructor() {//this.crypto = new client(); //crypto instance\n\n    this.fetch = (url, method, body) => {\n      let opt = {\n        method: method,\n        headers: fetchHeader,\n        body: body //credentials: 'same-origin'\n\n      };\n      return fetch(url, opt).then(response => response.json());\n    };\n\n    this.fetchFile = (url, method, body) => {\n      let opt = {\n        method: method,\n        headers: fetchHeaderFile,\n        body: body,\n        credentials: 'same-origin'\n      };\n      return fetch(url, opt).then(response => response.json());\n    };\n\n    this.buildUrl = path => {\n      return `${endpoints.baseUrl}${path}`;\n    };\n  }\n\n}","map":{"version":3,"sources":["/Users/apple/Desktop/MOHTML/assignment/src/services/index.js"],"names":["endpoints","fetchHeader","fetchHeaderFile","Api","constructor","fetch","url","method","body","opt","headers","then","response","json","fetchFile","credentials","buildUrl","path","baseUrl"],"mappings":"AAAA,SAASA,SAAT,QAA0B,YAA1B;AACA,MAAMC,WAAW,GAAG;AAAE,kBAAgB;AAAlB,CAApB,C,CAA2D;;AAC3D,MAAMC,eAAe,GAAG;AAAE,kBAAgB,kBAAlB;AAAsC,cAAY;AAAlD,CAAxB;AAGA,eAAe,MAAMC,GAAN,CAAU;AACrBC,EAAAA,WAAW,GAAG,CACV;;AADU,SAIdC,KAJc,GAIN,CAACC,GAAD,EAAMC,MAAN,EAAcC,IAAd,KAAuB;AAC3B,UAAIC,GAAG,GAAG;AACNF,QAAAA,MAAM,EAAEA,MADF;AAENG,QAAAA,OAAO,EAAET,WAFH;AAGNO,QAAAA,IAAI,EAAEA,IAHA,CAIN;;AAJM,OAAV;AAQA,aAAOH,KAAK,CAACC,GAAD,EAAMG,GAAN,CAAL,CAAgBE,IAAhB,CAAsBC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAAnC,CAAP;AACH,KAda;;AAAA,SAgBdC,SAhBc,GAgBF,CAACR,GAAD,EAAMC,MAAN,EAAcC,IAAd,KAAuB;AAE/B,UAAIC,GAAG,GAAG;AACNF,QAAAA,MAAM,EAAEA,MADF;AAENG,QAAAA,OAAO,EAAER,eAFH;AAGNM,QAAAA,IAAI,EAAEA,IAHA;AAINO,QAAAA,WAAW,EAAE;AAJP,OAAV;AAOA,aAAOV,KAAK,CAACC,GAAD,EAAMG,GAAN,CAAL,CAAgBE,IAAhB,CAAsBC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAAnC,CAAP;AAEH,KA3Ba;;AAAA,SA6BdG,QA7Bc,GA6BFC,IAAD,IAAU;AACjB,aAAQ,GAAEjB,SAAS,CAACkB,OAAQ,GAAED,IAAK,EAAnC;AACH,KA/Ba;AAEb;;AAHoB","sourcesContent":["import { endpoints } from './endPoint';\nconst fetchHeader = { \"Content-Type\": \"application/json\" } //\"appId\":data\nconst fetchHeaderFile = { \"Content-Type\": \"application/json\", \"mimeType\": \"multipart/form-data\" }\n\n\nexport default class Api {\n    constructor() {\n        //this.crypto = new client(); //crypto instance\n    }\n\n    fetch = (url, method, body) => {\n        let opt = {\n            method: method,\n            headers: fetchHeader,\n            body: body,\n            //credentials: 'same-origin'\n        }\n\n\n        return fetch(url, opt).then((response) => response.json())\n    }\n\n    fetchFile = (url, method, body) => {\n\n        let opt = {\n            method: method,\n            headers: fetchHeaderFile,\n            body: body,\n            credentials: 'same-origin'\n        }\n\n        return fetch(url, opt).then((response) => response.json())\n\n    }\n\n    buildUrl = (path) => {\n        return `${endpoints.baseUrl}${path}`;\n    }\n\n}"]},"metadata":{},"sourceType":"module"}