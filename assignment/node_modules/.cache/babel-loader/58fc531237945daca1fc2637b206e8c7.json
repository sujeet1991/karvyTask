{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/MOHTML/assignment/src/component/molecules/input.js\";\nimport React, { Fragment } from 'react';\nimport Input from '../atom/input';\nimport Label from '../atom/label';\nimport Error from '../atom/Error';\n\nconst InputData = props => {\n  const changeHandler = e => {\n    let {\n      name,\n      value\n    } = e.target;\n    props.onChange(name, value);\n  };\n\n  const BlurCheck = e => {\n    let {\n      name,\n      value\n    } = e.target;\n    props.validate(name, value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    label: props.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: props.type,\n    name: props.name,\n    value: props.value,\n    onChange: changeHandler,\n    onBlur: BlurCheck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Error, {\n    error: props.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default InputData;","map":{"version":3,"sources":["/Users/apple/Desktop/MOHTML/assignment/src/component/molecules/input.js"],"names":["React","Fragment","Input","Label","Error","InputData","props","changeHandler","e","name","value","target","onChange","BlurCheck","validate","label","type","error"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB;;AAEA,MAAMC,SAAS,GAAEC,KAAD,IAAS;AACrB,QAAMC,aAAa,GAAEC,CAAD,IAAK;AACrB,QAAI;AAACC,MAAAA,IAAD;AAAMC,MAAAA;AAAN,QAAaF,CAAC,CAACG,MAAnB;AACAL,IAAAA,KAAK,CAACM,QAAN,CAAeH,IAAf,EAAoBC,KAApB;AACH,GAHD;;AAIA,QAAMG,SAAS,GAAEL,CAAD,IAAK;AACjB,QAAI;AAACC,MAAAA,IAAD;AAAMC,MAAAA;AAAN,QAAaF,CAAC,CAACG,MAAnB;AACAL,IAAAA,KAAK,CAACQ,QAAN,CAAeL,IAAf,EAAoBC,KAApB;AACH,GAHD;;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEJ,KAAK,CAACS,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,KAAD;AACC,IAAA,IAAI,EAAET,KAAK,CAACU,IADb;AAEC,IAAA,IAAI,EAAEV,KAAK,CAACG,IAFb;AAGC,IAAA,KAAK,EAAEH,KAAK,CAACI,KAHd;AAIC,IAAA,QAAQ,EAAEH,aAJX;AAKC,IAAA,MAAM,EAAEM,SALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAUI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEP,KAAK,CAACW,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADJ;AAgBH,CAzBD;;AA2BA,eAAeZ,SAAf","sourcesContent":["import React,{Fragment} from 'react';\nimport Input from '../atom/input';\nimport Label from '../atom/label';\nimport Error from '../atom/Error';\n\nconst InputData=(props)=>{\n    const changeHandler=(e)=>{\n        let {name,value}=e.target;\n        props.onChange(name,value)\n    }\n    const BlurCheck=(e)=>{\n        let {name,value}=e.target;\n        props.validate(name,value)\n    }\n    return (\n        <fieldset>\n            <Label label={props.label}/>\n            <Input\n             type={props.type}\n             name={props.name}\n             value={props.value}\n             onChange={changeHandler}\n             onBlur={BlurCheck}\n             \n            />\n            <Error error={props.error}/>\n\n\n        </fieldset>\n    )\n}\n\nexport default InputData"]},"metadata":{},"sourceType":"module"}