{"ast":null,"code":"import { GOLD_BUYRATE_PENDING, GOLD_BUYRATE_SUCCESS, GOLD_BUYRATE_FAILED, GOLD_SELLRATE_PENDING, GOLD_SELLRATE_SUCCESS, GOLD_SELLRATE_FAILED, SET_TIMER, TIMER_DONE, TIMER_ZERO } from '../store/Action/type';\nimport { takeLatest, call, put } from 'redux-saga/effects';\nimport GoldApi from '../services/goldapi';\nlet goldapi = new GoldApi();\n\nasync function getbuy() {\n  let data = await goldapi.GetRateToBuy();\n  return data; // return {\n  //     \"api_name\": \"GetRateToBuy\",\n  //     \"success\": true,\n  //     \"response\": {\n  //         \"msg\": \"Gold Rate Found Successfully\",\n  //         \"data\": {\n  //             \"BeforeTaxAmt\": \"5247.11\",\n  //             \"Tax1Amt\": \"78.71\",\n  //             \"Tax2Amt\": \"78.71\",\n  //             \"TotalTaxAmt\": \"157.42\",\n  //             \"AfterTaxAmt\": \"5404.53\",\n  //             \"Quantity\": \"1\",\n  //             \"ValidityTime\": \"480000\",\n  //             \"Tax1Perc\": \"1.5\",\n  //             \"Tax2Perc\": \"1.5\",\n  //             \"QouteId\": \"ABC1603876531189000000002\",\n  //             \"TaxType\": \"CGST/SGST\"\n  //         }\n  //     }\n  // }\n}\n\nfunction* fetchBuyRate() {\n  yield put({\n    type: TIMER_ZERO\n  });\n  console.log('mastersaga');\n  let getData = yield call(getbuy);\n\n  if (getData.success) {\n    let data = getData.response.data;\n    console.log('sagabuyData', data);\n    yield put({\n      type: GOLD_BUYRATE_SUCCESS,\n      paylaod: data\n    });\n    yield put({\n      type: SET_TIMER\n    });\n    yield put({\n      type: TIMER_DONE\n    }); // dispatch({ type: SET_TIMER })\n  } else {\n    let data = null;\n    yield put({\n      type: GOLD_BUYRATE_FAILED,\n      paylaod: data\n    });\n  }\n\n  console.log(getData, 'getData'); // getApi.getCommonMaster().then(result => {\n  //     console.log(result, 'callmastersaga')\n  // })\n}\n\nexport function* GetBuyRate() {\n  yield takeLatest(GOLD_BUYRATE_PENDING, fetchBuyRate);\n}\n\nasync function getSell() {\n  let data = await goldapi.GetRateToSell();\n  return data; // return {\n  //     \"api_name\": \"GetRateToSell\",\n  //     \"success\": true,\n  //     \"response\": {\n  //         \"msg\": \"Gold Rate Found Successfully\",\n  //         \"data\": {\n  //             \"BeforeTaxAmt\": \"5081.11\",\n  //             \"Tax1Amt\": \"0.00\",\n  //             \"Tax2Amt\": \"0.00\",\n  //             \"TotalTaxAmt\": \"0.00\",\n  //             \"AfterTaxAmt\": \"5081.11\",\n  //             \"Quantity\": \"1\",\n  //             \"ValidityTime\": \"480000\",\n  //             \"Tax1Perc\": \"0\",\n  //             \"Tax2Perc\": \"0\",\n  //             \"QouteId\": \"ABC1603876428015000000001\",\n  //             \"TaxType\": \"CGST/SGST\"\n  //         }\n  //     }\n  // }\n}\n\nfunction* fetchSellRate(dispatch) {\n  // console.log('mastersaga')\n  yield put({\n    type: TIMER_ZERO\n  });\n  let getData = yield call(getSell);\n\n  if (getData.success) {\n    let data = getData.response.data;\n    console.log('sagaSellData', data);\n    yield put({\n      type: GOLD_SELLRATE_SUCCESS,\n      paylaod: data\n    });\n    yield put({\n      type: SET_TIMER\n    });\n    yield put({\n      type: TIMER_DONE\n    });\n  } else {\n    let data = null;\n    yield put({\n      type: GOLD_SELLRATE_FAILED,\n      paylaod: data\n    });\n  } //console.log(getData, 'getData')\n  // getApi.getCommonMaster().then(result => {\n  //     console.log(result, 'callmastersaga')\n  // })\n\n}\n\nexport function* GetSellRate() {\n  yield takeLatest(GOLD_SELLRATE_PENDING, fetchSellRate);\n}","map":{"version":3,"sources":["/Users/apple/Desktop/MOHTML/assignment/src/Saga/goldRate.js"],"names":["GOLD_BUYRATE_PENDING","GOLD_BUYRATE_SUCCESS","GOLD_BUYRATE_FAILED","GOLD_SELLRATE_PENDING","GOLD_SELLRATE_SUCCESS","GOLD_SELLRATE_FAILED","SET_TIMER","TIMER_DONE","TIMER_ZERO","takeLatest","call","put","GoldApi","goldapi","getbuy","data","GetRateToBuy","fetchBuyRate","type","console","log","getData","success","response","paylaod","GetBuyRate","getSell","GetRateToSell","fetchSellRate","dispatch","GetSellRate"],"mappings":"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","sourcesContent":["import { GOLD_BUYRATE_PENDING, GOLD_BUYRATE_SUCCESS, GOLD_BUYRATE_FAILED, GOLD_SELLRATE_PENDING, GOLD_SELLRATE_SUCCESS, GOLD_SELLRATE_FAILED, SET_TIMER, TIMER_DONE, TIMER_ZERO } from '../store/Action/type';\nimport { takeLatest, call, put } from 'redux-saga/effects';\nimport GoldApi from '../services/goldapi';\n\nlet goldapi = new GoldApi();\n\nasync function getbuy() {\n    let data = await goldapi.GetRateToBuy();\n    return data\n    // return {\n    //     \"api_name\": \"GetRateToBuy\",\n    //     \"success\": true,\n    //     \"response\": {\n    //         \"msg\": \"Gold Rate Found Successfully\",\n    //         \"data\": {\n    //             \"BeforeTaxAmt\": \"5247.11\",\n    //             \"Tax1Amt\": \"78.71\",\n    //             \"Tax2Amt\": \"78.71\",\n    //             \"TotalTaxAmt\": \"157.42\",\n    //             \"AfterTaxAmt\": \"5404.53\",\n    //             \"Quantity\": \"1\",\n    //             \"ValidityTime\": \"480000\",\n    //             \"Tax1Perc\": \"1.5\",\n    //             \"Tax2Perc\": \"1.5\",\n    //             \"QouteId\": \"ABC1603876531189000000002\",\n    //             \"TaxType\": \"CGST/SGST\"\n    //         }\n    //     }\n    // }\n}\n\nfunction* fetchBuyRate() {\n\n    yield put({ type: TIMER_ZERO })\n    console.log('mastersaga')\n    let getData = yield call(getbuy);\n    if (getData.success) {\n\n        let data = getData.response.data;\n        console.log('sagabuyData', data)\n        yield put({ type: GOLD_BUYRATE_SUCCESS, paylaod: data })\n        yield put({ type: SET_TIMER })\n        yield put({ type: TIMER_DONE })\n        // dispatch({ type: SET_TIMER })\n\n    } else {\n        let data = null;\n        yield put({ type: GOLD_BUYRATE_FAILED, paylaod: data })\n    }\n    console.log(getData, 'getData')\n    // getApi.getCommonMaster().then(result => {\n    //     console.log(result, 'callmastersaga')\n    // })\n}\n\nexport function* GetBuyRate() {\n    yield takeLatest(GOLD_BUYRATE_PENDING, fetchBuyRate);\n}\n\n\n\nasync function getSell() {\n    let data = await goldapi.GetRateToSell();\n    return data\n    // return {\n    //     \"api_name\": \"GetRateToSell\",\n    //     \"success\": true,\n    //     \"response\": {\n    //         \"msg\": \"Gold Rate Found Successfully\",\n    //         \"data\": {\n    //             \"BeforeTaxAmt\": \"5081.11\",\n    //             \"Tax1Amt\": \"0.00\",\n    //             \"Tax2Amt\": \"0.00\",\n    //             \"TotalTaxAmt\": \"0.00\",\n    //             \"AfterTaxAmt\": \"5081.11\",\n    //             \"Quantity\": \"1\",\n    //             \"ValidityTime\": \"480000\",\n    //             \"Tax1Perc\": \"0\",\n    //             \"Tax2Perc\": \"0\",\n    //             \"QouteId\": \"ABC1603876428015000000001\",\n    //             \"TaxType\": \"CGST/SGST\"\n    //         }\n    //     }\n    // }\n}\n\nfunction* fetchSellRate(dispatch) {\n    // console.log('mastersaga')\n    yield put({ type: TIMER_ZERO })\n    let getData = yield call(getSell);\n    if (getData.success) {\n        let data = getData.response.data;\n        console.log('sagaSellData', data)\n        yield put({ type: GOLD_SELLRATE_SUCCESS, paylaod: data })\n\n        yield put({ type: SET_TIMER })\n        yield put({ type: TIMER_DONE })\n\n    } else {\n        let data = null;\n        yield put({ type: GOLD_SELLRATE_FAILED, paylaod: data })\n    }\n    //console.log(getData, 'getData')\n    // getApi.getCommonMaster().then(result => {\n    //     console.log(result, 'callmastersaga')\n    // })\n}\n\nexport function* GetSellRate() {\n    yield takeLatest(GOLD_SELLRATE_PENDING, fetchSellRate);\n}\n"]},"metadata":{},"sourceType":"module"}