{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/MOHTML/assignment/src/component/organism/Home/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport Input from '../../molecules/input';\nimport { emailText, numberText, pwdText } from '../../../helper/method';\n\nconst Landing = props => {\n  const [state, setState] = useState({\n    userName: \"\",\n    pwd: \"\",\n    Cpwd: \"\"\n  }); // form state\n\n  const [error, setError] = useState({});\n  const [emailCheck, setEmailCheck] = useState(false); // form onChange\n\n  const HandlerChange = (name, value) => {\n    let allState = { ...state\n    };\n    allState[name] = value;\n    setState(allState);\n  };\n\n  useEffect(() => {\n    if (emailCheck) {}\n  }, [emailCheck]); // blur function   \n\n  const validate = (name, value) => {\n    let type = name;\n    let errorMsg = { ...error\n    };\n\n    if (type === \"userName\") {\n      let emailCheck = false;\n\n      if (value === \"\") {\n        errorMsg['userNameError'] = \"Please enter email id/phone number\";\n      } else if (numberText(value)) {\n        if (value.length !== 10) {\n          errorMsg['userNameError'] = \"Please enter 10 digit phone number\";\n        } else {\n          errorMsg['userNameError'] = \"\";\n          emailCheck = false;\n        }\n      } else {\n        let EmailCheck = emailText(value);\n\n        if (!EmailCheck) {\n          errorMsg['userNameError'] = \"Enter valid email id\";\n        } else {\n          errorMsg['userNameError'] = \"\";\n          emailCheck = true;\n        }\n      }\n\n      setEmailCheck(emailCheck);\n      setError(errorMsg);\n    }\n\n    if (type === \"pwd\") {\n      if (value === \"\") {\n        errorMsg['pwdError'] = \"Please enter password\";\n      } else if (!pwdText(value)) {\n        errorMsg['pwdError'] = \"Entered password doesnt not match criteria\";\n      } else {\n        errorMsg['pwdError'] = \"\";\n      }\n\n      setError(errorMsg);\n    }\n\n    if (type === \"Cpwd\") {\n      if (value === \"\") {\n        errorMsg['CpwdError'] = \"Please enter password\";\n      } else if (!pwdText(value)) {\n        errorMsg['CpwdError'] = \"Entered password doesnt not match criteria\";\n      } else if (value !== state.pwd) {\n        errorMsg['CpwdError'] = \"Password and confirm password field should be match\";\n      } else {\n        errorMsg['CpwdError'] = \"\";\n      }\n\n      setError(errorMsg);\n    }\n  };\n\n  const FormValid = () => {\n    let isValid = false;\n    let errorMsg = { ...error\n    };\n    let {\n      userName,\n      pwd,\n      Cpwd\n    } = state;\n    let ECheck = emailText(userName);\n    let MobileCheck = numberText(userName);\n    let pwdcheck = pwdText(pwd);\n    let pwdcheck1 = pwdText(Cpwd);\n\n    if (userName === \"\") {\n      errorMsg['userNameError'] = \"Please enter email id/phone number\";\n    } else if (emailCheck && !ECheck) {\n      errorMsg['userNameError'] = \"Please enter valid email id\";\n    } else if (!emailCheck && userName.length !== 10) {\n      errorMsg['userNameError'] = \"Please enter valid email id/phone number\";\n    } else if (pwd === \"\") {\n      errorMsg['pwdError'] = \"Please enter password\";\n    } else if (!pwdcheck) {\n      errorMsg['CpwdError'] = \"Entered password doesnt not match criteria\";\n    } else if (Cpwd === \"\") {\n      errorMsg['pwdError'] = \"Please enter password\";\n    } else if (!pwdcheck1) {\n      errorMsg['CpwdError'] = \"Entered password doesnt not match criteria\";\n    } else if (pwd !== state.pwd) {\n      errorMsg['CpwdError'] = \"Password and confirm password field should be match\";\n    } else {\n      errorMsg['userNameError'] = \"\";\n      errorMsg['pwdError'] = \"\";\n      errorMsg['CpwdError'] = \"\";\n      isValid = true;\n    }\n\n    setError(errorMsg);\n    return isValid;\n  };\n\n  const submitbtn = () => {\n    let checkF = FormValid();\n\n    if (checkF) {\n      alert();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    id: \"contact\",\n    action: \"\",\n    method: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, \"Hi Sujeet\"), /*#__PURE__*/React.createElement(Input, {\n    label: \"EmailID / Phone\",\n    type: \"text\",\n    name: \"userName\",\n    value: state.userName,\n    onChange: HandlerChange,\n    validate: validate,\n    error: error['userNameError'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    label: \"Password\",\n    type: \"text\",\n    name: \"pwd\",\n    value: state.pwd,\n    onChange: HandlerChange,\n    validate: validate,\n    error: error['pwdError'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 18\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    label: \"Confirm Password\",\n    type: \"text\",\n    name: \"Cpwd\",\n    value: state.Cpwd,\n    onChange: HandlerChange,\n    validate: validate,\n    error: error['CpwdError'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 18\n    }\n  }), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    name: \"submit\",\n    type: \"button\",\n    onClick: submitbtn,\n    id: \"contact-submit\",\n    \"data-submit\": \"...Sending\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  }, \"Submit\"))));\n};\n\nexport default Landing;","map":{"version":3,"sources":["/Users/apple/Desktop/MOHTML/assignment/src/component/organism/Home/index.js"],"names":["React","useState","useEffect","Input","emailText","numberText","pwdText","Landing","props","state","setState","userName","pwd","Cpwd","error","setError","emailCheck","setEmailCheck","HandlerChange","name","value","allState","validate","type","errorMsg","length","EmailCheck","FormValid","isValid","ECheck","MobileCheck","pwdcheck","pwdcheck1","submitbtn","checkF","alert"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport Input from '../../molecules/input';\nimport {emailText,numberText,pwdText} from '../../../helper/method';\n\n\n\nconst Landing=(props)=>{\n    const [state,setState]=useState({userName:\"\",pwd:\"\",Cpwd:\"\"}) // form state\n    const [error,setError]=useState({});\n    const [emailCheck,setEmailCheck]=useState(false);\n\n    // form onChange\n    const HandlerChange=(name,value)=>{\n        let allState={...state}\n        allState[name]=value\n        setState(allState)\n       }\n\n       useEffect(()=>{\n        if(emailCheck){\n           \n        }\n       },[emailCheck])   \n\n    // blur function   \n    const validate=(name,value)=>{\n        let type =name;\n        let errorMsg={...error};\n        if(type===\"userName\"){\n            let emailCheck=false;\n            if(value===\"\"){\n                errorMsg['userNameError']=\"Please enter email id/phone number\"\n            }else if(numberText(value)){\n                    if(value.length!==10){\n                        errorMsg['userNameError']=\"Please enter 10 digit phone number\"\n                    }else{\n                        errorMsg['userNameError']=\"\";\n                        emailCheck=false;\n                    }\n\n            }else{\n                let EmailCheck= emailText(value);\n               if(!EmailCheck){\n                errorMsg['userNameError']=\"Enter valid email id\"\n               }else{\n                errorMsg['userNameError']=\"\";\n                emailCheck=true;\n               }\n            }\n            setEmailCheck(emailCheck)\n            setError(errorMsg)\n        }\n        if(type===\"pwd\"){\n            if(value===\"\"){\n                errorMsg['pwdError']=\"Please enter password\"\n            }else if(!pwdText(value)){\n                errorMsg['pwdError']=\"Entered password doesnt not match criteria\"\n            }else{\n                errorMsg['pwdError']=\"\";\n            }\n            setError(errorMsg)\n           \n        }   \n\n        if(type===\"Cpwd\"){\n            if(value===\"\"){\n                errorMsg['CpwdError']=\"Please enter password\"\n            }else if(!pwdText(value)){\n                errorMsg['CpwdError']=\"Entered password doesnt not match criteria\"\n            }\n            else if(value!==state.pwd){\n                errorMsg['CpwdError']=\"Password and confirm password field should be match\"   \n            }\n            else{\n                errorMsg['CpwdError']=\"\";\n            }\n            setError(errorMsg)\n        }\n        \n        \n    } \n \n const FormValid=()=>{\n     let isValid=false;\n     let errorMsg={...error};\n     let {userName,pwd,Cpwd}=state;\n     let ECheck= emailText(userName);\n    let MobileCheck= numberText(userName);\n    let pwdcheck=pwdText(pwd);\n    let pwdcheck1=pwdText(Cpwd);\n      if(userName===\"\"){\n        errorMsg['userNameError']=\"Please enter email id/phone number\"\n      }else if(emailCheck && !ECheck){\n            errorMsg['userNameError']=\"Please enter valid email id\"\n        }\n       \n        else if(!emailCheck && userName.length!==10){\n            errorMsg['userNameError']=\"Please enter valid email id/phone number\"\n        }else if(pwd===\"\"){\n            errorMsg['pwdError']=\"Please enter password\"\n        }else if(!pwdcheck){\n            errorMsg['CpwdError']=\"Entered password doesnt not match criteria\"\n        }\n        else if(Cpwd===\"\"){\n            errorMsg['pwdError']=\"Please enter password\"\n        }else if(!pwdcheck1){\n            errorMsg['CpwdError']=\"Entered password doesnt not match criteria\"\n        }else if(pwd!==state.pwd){\n            errorMsg['CpwdError']=\"Password and confirm password field should be match\"   \n        }else{\n            errorMsg['userNameError']=\"\";\n            errorMsg['pwdError']=\"\";\n            errorMsg['CpwdError']=\"\";\n            isValid=true;\n        }\n        setError(errorMsg)\n        return isValid\n\n      }  \n   \n    \n  const submitbtn=()=>{\n      let checkF=FormValid();\n      if(checkF){\n        alert()\n      }\n      \n  }   \n\n    return(\n        <div className=\"container\">  \n            <form id=\"contact\" action=\"\" method=\"post\">\n                <h3>Hi Sujeet</h3>\n               \n                <Input\n                    label=\"EmailID / Phone\"\n                    type='text'\n                    name=\"userName\"\n                    value={state.userName}\n                    onChange={HandlerChange}\n                    validate={validate}\n                    error={error['userNameError']}\n                />\n                 <Input\n                    label=\"Password\"\n                    type='text'\n                    name=\"pwd\"\n                    value={state.pwd}\n                    onChange={HandlerChange}\n                    validate={validate}\n                    error={error['pwdError']}\n                />\n                 <Input\n                    label=\"Confirm Password\"\n                    type='text'\n                    name=\"Cpwd\"\n                    value={state.Cpwd}\n                    onChange={HandlerChange}\n                    validate={validate}\n                    error={error['CpwdError']}\n                />\n               \n                <fieldset>\n                <button name=\"submit\" type=\"button\" onClick={submitbtn} id=\"contact-submit\" data-submit=\"...Sending\">Submit</button>\n                </fieldset>\n               \n            </form>\n            </div>\n    )\n}\nexport default Landing"]},"metadata":{},"sourceType":"module"}