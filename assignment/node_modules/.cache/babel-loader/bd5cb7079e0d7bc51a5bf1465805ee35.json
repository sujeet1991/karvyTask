{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga'; // import thunk from 'redux-thunk';\n\nimport Rootreducer from './Reducer';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport mySaga from '../Saga';\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nconst sagaMiddleware = createSagaMiddleware();\nconst persistedReducer = persistReducer({\n  key: 'root1',\n  blacklist: [''],\n  whitelist: ['', ''],\n  storage\n}, Rootreducer);\nconst Store = createStore(persistedReducer, {}, compose(applyMiddleware(sagaMiddleware), composeWithDevTools(), window.devToolsExtension ? window.devToolsExtension() : f => f));\nconst persistor = persistStore(Store);\nsagaMiddleware.run(mySaga);\nexport { Store, persistor };","map":{"version":3,"sources":["/Users/apple/Desktop/MOHTML/assignment/src/store/store.js"],"names":["createStore","applyMiddleware","compose","createSagaMiddleware","Rootreducer","persistStore","persistReducer","storage","mySaga","composeWithDevTools","sagaMiddleware","persistedReducer","key","blacklist","whitelist","Store","window","devToolsExtension","f","persistor","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,oBAAP,MAAiC,YAAjC,C,CACA;;AACA,OAAOC,WAAP,MAAwB,WAAxB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAGA,OAAOC,MAAP,MAAmB,SAAnB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAGA,MAAMC,cAAc,GAAGP,oBAAoB,EAA3C;AACA,MAAMQ,gBAAgB,GAAGL,cAAc,CACnC;AACIM,EAAAA,GAAG,EAAE,OADT;AAEIC,EAAAA,SAAS,EAAE,CAAC,EAAD,CAFf;AAGIC,EAAAA,SAAS,EAAE,CAAC,EAAD,EAAK,EAAL,CAHf;AAIIP,EAAAA;AAJJ,CADmC,EAQnCH,WARmC,CAAvC;AAYA,MAAMW,KAAK,GAAGf,WAAW,CAACW,gBAAD,EAAmB,EAAnB,EAAuBT,OAAO,CAEnDD,eAAe,CAACS,cAAD,CAFoC,EAGnDD,mBAAmB,EAHgC,EAInDO,MAAM,CAACC,iBAAP,GAA2BD,MAAM,CAACC,iBAAP,EAA3B,GAAwDC,CAAC,IAAIA,CAJV,CAA9B,CAAzB;AAOA,MAAMC,SAAS,GAAGd,YAAY,CAACU,KAAD,CAA9B;AACAL,cAAc,CAACU,GAAf,CAAmBZ,MAAnB;AACA,SAASO,KAAT,EAAgBI,SAAhB","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga'\n// import thunk from 'redux-thunk';\nimport Rootreducer from './Reducer';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\n\nimport mySaga from '../Saga';\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\n\nconst sagaMiddleware = createSagaMiddleware()\nconst persistedReducer = persistReducer(\n    {\n        key: 'root1',\n        blacklist: [''],\n        whitelist: ['', ''],\n        storage,\n\n    },\n    Rootreducer\n\n)\n\nconst Store = createStore(persistedReducer, {}, compose(\n\n    applyMiddleware(sagaMiddleware),\n    composeWithDevTools(),\n    window.devToolsExtension ? window.devToolsExtension() : f => f\n));\n\nconst persistor = persistStore(Store);\nsagaMiddleware.run(mySaga)\nexport { Store, persistor }\n\n\n\n"]},"metadata":{},"sourceType":"module"}