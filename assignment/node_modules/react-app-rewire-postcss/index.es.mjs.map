{"version":3,"file":"index.es.mjs","sources":["index.js"],"sourcesContent":["export default (config, options) => {\n\t// find any first matching rule that contains postcss-loader\n\tfilterPostCSSLoader(config.module.rules).forEach(rule => {\n\t\tfilterPostCSSLoader(rule.oneOf).forEach(oneOf => {\n\t\t\tfilterPostCSSLoader(oneOf.use || oneOf.loader).forEach(use => {\n\t\t\t\t// use the latest version of postcss-loader\n\t\t\t\tuse.loader = require.resolve('postcss-loader');\n\n\t\t\t\t// conditionally replace options with a custom configuration\n\t\t\t\tuse.options = options\n\t\t\t\t\t? Object.assign({ ident: 'postcss' }, options)\n\t\t\t\t: Object.assign(use.options, options)\n\t\t\t})\n\t\t})\n\t});\n\n\t// return the mutated configuration\n\treturn config;\n};\n\n// return a filtered array that includes postcss-loader\nconst filterPostCSSLoader = array => array.filter(object => JSON.stringify(object).includes('postcss-loader'));\n"],"names":["config","options","filterPostCSSLoader","module","rules","forEach","rule","oneOf","use","loader","require","resolve","Object","assign","ident","array","filter","object","JSON","stringify","includes"],"mappings":"AAAA,aAAe,CAACA,MAAD,EAASC,OAAT,KAAqB;;EAEnCC,mBAAmB,CAACF,MAAM,CAACG,MAAP,CAAcC,KAAf,CAAnB,CAAyCC,OAAzC,CAAiDC,IAAI,IAAI;IACxDJ,mBAAmB,CAACI,IAAI,CAACC,KAAN,CAAnB,CAAgCF,OAAhC,CAAwCE,KAAK,IAAI;MAChDL,mBAAmB,CAACK,KAAK,CAACC,GAAN,IAAaD,KAAK,CAACE,MAApB,CAAnB,CAA+CJ,OAA/C,CAAuDG,GAAG,IAAI;;QAE7DA,GAAG,CAACC,MAAJ,GAAaC,OAAO,CAACC,OAAR,CAAgB,gBAAhB,CAAb,CAF6D;;QAK7DH,GAAG,CAACP,OAAJ,GAAcA,OAAO,GAClBW,MAAM,CAACC,MAAP,CAAc;UAAEC,KAAK,EAAE;SAAvB,EAAoCb,OAApC,CADkB,GAEnBW,MAAM,CAACC,MAAP,CAAcL,GAAG,CAACP,OAAlB,EAA2BA,OAA3B,CAFF;OALD;KADD;GADD,EAFmC;;SAiB5BD,MAAP;CAjBD;;AAqBA,MAAME,mBAAmB,GAAGa,KAAK,IAAIA,KAAK,CAACC,MAAN,CAAaC,MAAM,IAAIC,IAAI,CAACC,SAAL,CAAeF,MAAf,EAAuBG,QAAvB,CAAgC,gBAAhC,CAAvB,CAArC;;;;"}